{"version":"0.2.7","name":"After order shipped email","description":"An email that gets send X days after an order has been shipped.","check_frequency":"720","min_resend_interval":"0","autologin":"0","expire_time":"2880","provider":"orders","filter_export":"{\"type\":\"orders\",\"aggregator\":\"all\",\"expectation\":\"true\",\"param_campaign\":{},\"param_store_id\":\"1\",\"param_gmt_offset\":-600,\"filters\":[{\"type\":\"order_shipped\",\"shipped_at_from\":\"5\",\"shipped_at_to\":\"7\",\"shipped_at_unit\":\"days\"},{\"type\":\"order_table\",\"column\":\"store_id\",\"operator\":\"()\",\"value\":[\"1\"]},{\"type\":\"order_table\",\"column\":\"status\",\"operator\":\"()\",\"value\":[\"complete\"]},{\"type\":\"order_table\",\"column\":\"is_virtual\",\"operator\":\"!=\"}]}","medium":"email","medium_json":"{\"template_id\":\"3\",\"subject\":\"Give us your feedback\",\"body\":\"{\\\"version\\\":1,\\\"customCss\\\":{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"\\\\n.product-table {\\\\n    border:1px solid #ccc;\\\\n    background:white;\\\\n}\\\\n\\\\n.product-table td {\\\\n    padding:5px;\\\\n}\\\\n\\\\n\\\"},\\\"fields\\\":{\\\"short_teaser\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"We would love to get some feedback\\\"}],\\\"Header\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"header_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"{{media url='wysiwyg\\\/662.jpg'}}\\\"}],\\\"main_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<p><strong>Hello&nbsp;{{var order.customer_firstname}},<\\\/strong><\\\/p>\\\\n\\\\n<p>Do you remember us, you have recently ordered bellowed items and we where wondering if you could give us some feedback.<\\\/p>\\\\n{{block type=\\\\\\\"mzax_emarketing\\\/template\\\\\\\" area=\\\\\\\"frontend\\\\\\\" template=\\\\\\\"mzax\\\/email\\\/order-items.phtml\\\\\\\" order=\\\\\\\"$order\\\\\\\"}}\\\"}],\\\"contentBottom\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"contentBottomTr\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null},{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"left_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"},{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"left_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Coggh<\\\/h3>\\\\nYou can alfjfhjgso gfghjet a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"},{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\n<a href=\\\\\\\"http:\\\/\\\/kb.mailchimp.com\\\/article\\\/how-do-i-work-with-repeatable-content-blocks\\\\\\\" target=\\\\\\\"_blank\\\\\\\">Repeatable sections<\\\/a> are noted with plus and minus signs so that you fghjposite and remove images for text-only blocks.\\\"}],\\\"right_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"},{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"right_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repehh<\\\/h3>\\\\n<br \\\/>\\\\nYou can also get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"},{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\n<a href=\\\\\\\"http:\\\/\\\/kb.mailchimp.com\\\/article\\\/how-do-i-work-with-repeatable-content-blocks\\\\\\\" target=\\\\\\\"_blank\\\\\\\">Repeatable sections<\\\/a> are noted with plus and minus signs so that yofghjt to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"Footer\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"Unsubscribe\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"footerEnd\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"finalFooter\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"Optional Footer Text\\\"}]}}\",\"day_filter\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],\"time_filter\":[\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],\"designmode\":\"1\",\"prerender\":\"0\",\"forward_emails\":\"\"}"}