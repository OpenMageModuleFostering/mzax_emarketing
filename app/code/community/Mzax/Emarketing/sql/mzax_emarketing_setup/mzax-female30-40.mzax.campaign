{"version":"0.2.7","name":"Female 30-40 upcoming birthday","description":"Start an campaign to all your female customers between the age of 30 and 40 and birthday is soon.","check_frequency":"1440","min_resend_interval":"0","autologin":"0","expire_time":"2880","provider":"customers","filter_export":"{\"type\":\"customers\",\"aggregator\":\"all\",\"expectation\":\"true\",\"param_campaign\":{},\"param_store_id\":\"1\",\"param_gmt_offset\":-600,\"filters\":[{\"type\":\"newsletter\",\"condition\":\"is\",\"status\":\"1\"},{\"type\":\"customer_lastlogin\",\"login_from\":\"0\",\"login_to\":\"12\",\"login_unit\":\"months\"},{\"type\":\"customer_attribute\",\"attribute\":\"gender\",\"operator\":\"==\",\"value\":\"99\"},{\"type\":\"customer_attribute\",\"attribute\":\"dob\",\"relative\":\"1\",\"anniversary\":\"\",\"direction\":\"past\",\"value_from\":\"30\",\"value_to\":\"40\",\"value_unit\":\"years\"},{\"type\":\"customer_attribute\",\"attribute\":\"dob\",\"relative\":\"1\",\"anniversary\":\"1\",\"direction\":\"future\",\"value_from\":\"4\",\"value_to\":\"5\",\"value_unit\":\"weeks\"}]}","medium":"email","medium_json":"{\"designmode\":\"1\",\"template_id\":\"3\",\"subject\":\"Celebrate the 30-something\",\"body\":\"{\\\"version\\\":1,\\\"customCss\\\":{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null},\\\"fields\\\":{\\\"short_teaser\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"Use this area to offer a short teaser of your email&#39;s content. Text here will show in the preview area of some email clients.\\\"}],\\\"Header\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"header_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/2425ea8ad3\\\/images\\\/header_placeholder_600px.png\\\"}],\\\"main_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<p><strong>Hi&nbsp;{{var customer.name}}!<\\\/strong><br \\\/>\\\\nYour birthday is coming up and we might have what you need for your Party!<\\\/p>\\\\n\\\"}],\\\"contentBottom\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"contentBottomTr\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"left_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"left_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\nRepeatable sections are noted with plus and minus signs so that you can add and subtract content blocks.<br \\\/>\\\\n<br \\\/>\\\\nYou can also get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"right_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"right_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\nRepeatable sections are noted with plus and minus signs so that you can add and subtract content blocks.<br \\\/>\\\\n<br \\\/>\\\\nYou can also get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"Footer\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"Unsubscribe\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}]}}\",\"prerender\":\"0\",\"forward_emails\":\"\"}"}