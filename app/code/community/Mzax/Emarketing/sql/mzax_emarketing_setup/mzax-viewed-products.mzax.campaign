{"version":"0.2.7","name":"Viewed Products","description":"The customer has viewed certain products X days ago but not yet bought any of them.","check_frequency":"1440","min_resend_interval":"62","autologin":"0","expire_time":"1440","provider":"customers","filter_export":"{\"type\":\"customers\",\"aggregator\":\"all\",\"expectation\":\"true\",\"param_campaign\":{},\"param_store_id\":\"1\",\"param_gmt_offset\":-600,\"filters\":[{\"type\":\"newsletter\",\"condition\":\"is\",\"status\":\"1\"},{\"type\":\"customer_event\",\"name\":\"catalog_product_view\",\"event_date_from\":\"4\",\"event_date_to\":\"8\",\"event_date_unit\":\"days\",\"aggregator\":\"all\",\"expectation\":\"true\",\"filters\":[{\"type\":\"product_category\",\"operator\":\"()\",\"value\":\"1,2,3,4\"}]},{\"type\":\"customer_order\",\"aggregator\":\"all\",\"expectation\":\"true\",\"orders_operator\":\"==\",\"orders\":\"0\",\"filters\":[{\"type\":\"order_table\",\"column\":\"created_at\",\"relative\":\"1\",\"anniversary\":\"\",\"direction\":\"past\",\"value_from\":\"0\",\"value_to\":\"15\",\"value_unit\":\"days\"},{\"type\":\"order_items\",\"sum\":\"qty_ordered\",\"value_operator\":\">=\",\"value\":\"1\",\"aggregator\":\"all\",\"filters\":[{\"type\":\"product_category\",\"operator\":\"()\",\"value\":\"1,2,3,4\"}]}]}]}","medium":"email","medium_json":"{\"designmode\":\"1\",\"template_id\":\"3\",\"subject\":\"We thought you might like this\",\"body\":\"{\\\"version\\\":1,\\\"customCss\\\":{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null},\\\"fields\\\":{\\\"short_teaser\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"Use this area to offer a short teaser of your email&#39;s content. Text here will show in the preview area of some email clients.\\\"}],\\\"Header\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"header_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/2425ea8ad3\\\/images\\\/header_placeholder_600px.png\\\"}],\\\"main_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<p><strong>Hello {{var customer.name}},<\\\/strong><br \\\/>\\\\nWe thought you might like one of the following products we have on sale today....<\\\/p>\\\\n\\\"}],\\\"contentBottom\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"contentBottomTr\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"left_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"left_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\nRepeatable sections are noted with plus and minus signs so that you can add and subtract content blocks.<br \\\/>\\\\n<br \\\/>\\\\nYou can also get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"right_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"right_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\nRepeatable sections are noted with plus and minus signs so that you can add and subtract content blocks.<br \\\/>\\\\n<br \\\/>\\\\nYou can also get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"Footer\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"Unsubscribe\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}]}}\",\"prerender\":\"0\",\"forward_emails\":\"\"}"}